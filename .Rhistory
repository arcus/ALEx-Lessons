?rankFD
data(Muco)
Muco
Data <- Muco
Data
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
# Chunk 2: vars
question("You might use an exact test of goodness-of-fit to examine which of the following relationships?",
answer("Height and weight"),
answer("Height, weight, and age group"),
answer("Whether a child uses his right hand more frequently than his left hand", correct = TRUE),
answer("Height, weight, and season")
)
# Chunk 3: why
question("When might you NOT want to use the exact test of goodness-of-fit despite having a single nominal variable?",
answer("When you your data is normally distributed"),
answer("When your data is very large", correct = TRUE),
answer("When your data is NOT normally distributed"),
answer("When you have skewed data")
)
# Chunk 4: rank
question("How do you make ranked data?",
answer("You rate the data on a scale from poor to excellent"),
answer("The smallest measurement is 1, the second smallest is 2, and so on through all the values you have", correct = TRUE),
answer("The largest measurement is 1, the second largest is 2, and so on through all your values"),
answer("You submit your data for IRB review in a contest to see which researcher has the best data")
)
# Chunk 5: hetero
question("Upon which assumptions does the Kruskal-Wallis test rest?",
answer("Normality"),
answer("Inter-related variables"),
answer("Ranking"),
answer("Homoscedasticity and same group distributions", correct = TRUE)
)
# Chunk 6: assumptions
question("Upon what assumptions does the Kruskal-Wallis test NOT rely?",
answer("Normality and homoscedasticity"),
answer("Wechsler test results"),
answer("Packages like dplyr and base stats"),
answer("All of the above", correct = TRUE)
)
# Chunk 7: best
question("What is the BEST situation in which to use a Kruskal-Wallis test?",
answer("When your data ISN'T normal"),
answer("When your data is homoscedastic"),
answer("When your data is actually ranked (a relatively rare occurence)", correct = TRUE),
answer("When your data is normal but the data set is very small")
)
Data <- mutate(Data,
Health = factor(Health, levels = unique(Health)))
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
# Chunk 2: vars
question("You might use an exact test of goodness-of-fit to examine which of the following relationships?",
answer("Height and weight"),
answer("Height, weight, and age group"),
answer("Whether a child uses his right hand more frequently than his left hand", correct = TRUE),
answer("Height, weight, and season")
)
# Chunk 3: why
question("When might you NOT want to use the exact test of goodness-of-fit despite having a single nominal variable?",
answer("When you your data is normally distributed"),
answer("When your data is very large", correct = TRUE),
answer("When your data is NOT normally distributed"),
answer("When you have skewed data")
)
# Chunk 4: rank
question("How do you make ranked data?",
answer("You rate the data on a scale from poor to excellent"),
answer("The smallest measurement is 1, the second smallest is 2, and so on through all the values you have", correct = TRUE),
answer("The largest measurement is 1, the second largest is 2, and so on through all your values"),
answer("You submit your data for IRB review in a contest to see which researcher has the best data")
)
# Chunk 5: hetero
question("Upon which assumptions does the Kruskal-Wallis test rest?",
answer("Normality"),
answer("Inter-related variables"),
answer("Ranking"),
answer("Homoscedasticity and same group distributions", correct = TRUE)
)
# Chunk 6: assumptions
question("Upon what assumptions does the Kruskal-Wallis test NOT rely?",
answer("Normality and homoscedasticity"),
answer("Wechsler test results"),
answer("Packages like dplyr and base stats"),
answer("All of the above", correct = TRUE)
)
# Chunk 7: best
question("What is the BEST situation in which to use a Kruskal-Wallis test?",
answer("When your data ISN'T normal"),
answer("When your data is homoscedastic"),
answer("When your data is actually ranked (a relatively rare occurence)", correct = TRUE),
answer("When your data is normal but the data set is very small")
)
Data <- mutate(Data,
Health = factor(Health, levels = unique(Health)))
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
# Chunk 2: vars
question("You might use an exact test of goodness-of-fit to examine which of the following relationships?",
answer("Height and weight"),
answer("Height, weight, and age group"),
answer("Whether a child uses his right hand more frequently than his left hand", correct = TRUE),
answer("Height, weight, and season")
)
# Chunk 3: why
question("When might you NOT want to use the exact test of goodness-of-fit despite having a single nominal variable?",
answer("When you your data is normally distributed"),
answer("When your data is very large", correct = TRUE),
answer("When your data is NOT normally distributed"),
answer("When you have skewed data")
)
# Chunk 4: rank
question("How do you make ranked data?",
answer("You rate the data on a scale from poor to excellent"),
answer("The smallest measurement is 1, the second smallest is 2, and so on through all the values you have", correct = TRUE),
answer("The largest measurement is 1, the second largest is 2, and so on through all your values"),
answer("You submit your data for IRB review in a contest to see which researcher has the best data")
)
# Chunk 5: hetero
question("Upon which assumptions does the Kruskal-Wallis test rest?",
answer("Normality"),
answer("Inter-related variables"),
answer("Ranking"),
answer("Homoscedasticity and same group distributions", correct = TRUE)
)
# Chunk 6: assumptions
question("Upon what assumptions does the Kruskal-Wallis test NOT rely?",
answer("Normality and homoscedasticity"),
answer("Wechsler test results"),
answer("Packages like dplyr and base stats"),
answer("All of the above", correct = TRUE)
)
# Chunk 7: best
question("What is the BEST situation in which to use a Kruskal-Wallis test?",
answer("When your data ISN'T normal"),
answer("When your data is homoscedastic"),
answer("When your data is actually ranked (a relatively rare occurence)", correct = TRUE),
answer("When your data is normal but the data set is very small")
)
Data
Data <- Muco
Data
names(Data) <- c("Efficiency", "Health")
Data
Data <- mutate(Data,
Health = factor(Health, levels = unique(Health)))
Data
str(Data)
Data <- data(Muco)
Muco
library(rankFD)
Muco
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
Data <- Muco
names(Data) <- c("Efficiency", "Health")
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
Data <- Muco
names(Data) <- c("Efficiency", "Health")
rm(Muco)
rm(Data)
rm(list = ls())
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
Data <- Muco
data(Muco)
library(rankFD)
Data <- Muco
??dunnTest
PT <- PT$res
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
library(rankFD)
library(FSA)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
Data <- Muco
names(Data) <- c("Efficiency", "Health")
# Chunk 2: vars
question("You might use an exact test of goodness-of-fit to examine which of the following relationships?",
answer("Height and weight"),
answer("Height, weight, and age group"),
answer("Whether a child uses his right hand more frequently than his left hand", correct = TRUE),
answer("Height, weight, and season")
)
# Chunk 3: why
question("When might you NOT want to use the exact test of goodness-of-fit despite having a single nominal variable?",
answer("When you your data is normally distributed"),
answer("When your data is very large", correct = TRUE),
answer("When your data is NOT normally distributed"),
answer("When you have skewed data")
)
# Chunk 4: rank
question("How do you make ranked data?",
answer("You rate the data on a scale from poor to excellent"),
answer("The smallest measurement is 1, the second smallest is 2, and so on through all the values you have", correct = TRUE),
answer("The largest measurement is 1, the second largest is 2, and so on through all your values"),
answer("You submit your data for IRB review in a contest to see which researcher has the best data")
)
# Chunk 5: hetero
question("Upon which assumptions does the Kruskal-Wallis test rest?",
answer("Normality"),
answer("Inter-related variables"),
answer("Ranking"),
answer("Homoscedasticity and same group distributions", correct = TRUE)
)
# Chunk 6: assumptions
question("Upon what assumptions does the Kruskal-Wallis test NOT rely?",
answer("Normality and homoscedasticity"),
answer("Wechsler test results"),
answer("Packages like dplyr and base stats"),
answer("All of the above", correct = TRUE)
)
# Chunk 7: best
question("What is the BEST situation in which to use a Kruskal-Wallis test?",
answer("When your data ISN'T normal"),
answer("When your data is homoscedastic"),
answer("When your data is actually ranked (a relatively rare occurence)", correct = TRUE),
answer("When your data is normal but the data set is very small")
)
# Chunk 9: mutatedata
# Chunk 10: mutatedata-hint-1
Data <- mutate(...,
Health = factor(..., levels = unique(...)))
# Chunk 11: mutatedata-hint-2
Data <- mutate(Data,
Health = factor(Health, levels = unique(...)))
# Chunk 12: mutatedata-solution
Data <- mutate(Data,
Health = factor(Health, levels = unique(Health)))
# Chunk 1: setup
library(learnr)
library(data.table)
library(dplyr)
library(rcompanion)
library(lattice)
library(rankFD)
library(FSA)
knitr::opts_chunk$set(echo = FALSE)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
Data <- Muco
names(Data) <- c("Efficiency", "Health")
# Chunk 2: vars
question("You might use an exact test of goodness-of-fit to examine which of the following relationships?",
answer("Height and weight"),
answer("Height, weight, and age group"),
answer("Whether a child uses his right hand more frequently than his left hand", correct = TRUE),
answer("Height, weight, and season")
)
# Chunk 3: why
question("When might you NOT want to use the exact test of goodness-of-fit despite having a single nominal variable?",
answer("When you your data is normally distributed"),
answer("When your data is very large", correct = TRUE),
answer("When your data is NOT normally distributed"),
answer("When you have skewed data")
)
# Chunk 4: rank
question("How do you make ranked data?",
answer("You rate the data on a scale from poor to excellent"),
answer("The smallest measurement is 1, the second smallest is 2, and so on through all the values you have", correct = TRUE),
answer("The largest measurement is 1, the second largest is 2, and so on through all your values"),
answer("You submit your data for IRB review in a contest to see which researcher has the best data")
)
# Chunk 5: hetero
question("Upon which assumptions does the Kruskal-Wallis test rest?",
answer("Normality"),
answer("Inter-related variables"),
answer("Ranking"),
answer("Homoscedasticity and same group distributions", correct = TRUE)
)
# Chunk 6: assumptions
question("Upon what assumptions does the Kruskal-Wallis test NOT rely?",
answer("Normality and homoscedasticity"),
answer("Wechsler test results"),
answer("Packages like dplyr and base stats"),
answer("All of the above", correct = TRUE)
)
# Chunk 7: best
question("What is the BEST situation in which to use a Kruskal-Wallis test?",
answer("When your data ISN'T normal"),
answer("When your data is homoscedastic"),
answer("When your data is actually ranked (a relatively rare occurence)", correct = TRUE),
answer("When your data is normal but the data set is very small")
)
# Chunk 9: mutatedata
# Chunk 10: mutatedata-hint-1
Data <- mutate(...,
Health = factor(..., levels = unique(...)))
# Chunk 11: mutatedata-hint-2
Data <- mutate(Data,
Health = factor(Health, levels = unique(...)))
# Chunk 12: mutatedata-solution
Data <- mutate(Data,
Health = factor(Health, levels = unique(Health)))
Data
str(Data)
PT
### Order groups by median
Data$Health <- factor(Data$Health,
levels=c("OAD", "Normal", "Asbestosis"))
### Run the Dunn test
PT = dunnTest(Efficiency ~ Health,
data=Data,
method="bh")    # Can adjust p-values;
# See ?p.adjust for options
## See the results
PT
PT <- PT$res
PT
cldList(comparison = PT$Comparison,
p.value    = PT$P.adj,
threshold  = 0.05)
try(cldList(comparison = PT$Comparison,
p.value    = PT$P.adj,
threshold  = 0.05))
rm(list = ls)
rm(list = ls())
rm(ls())
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chop-arcus', token='4B8DBBDDE1B4778F304E2B2F0BF45727', secret='nipiQVkor0H0RL4Tj4BFjIw+Zf1Qn7uHW0JAiBNg')
library(FSA)
library(learnr)
library(learnr)
options(scipen = 9999)
tutorial_options(exercise.startover = TRUE,
exercise.eval = TRUE,
exercise.cap = "R Code",
exercise.completion = TRUE,
exercise.diagnostics = TRUE)
if(!require(learnr)){install.packages("learnr")}
if(!require(psych)){install.packages("psych")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(lsr)){install.packages("lsr")}
if(!require(ggplot2)){install.packages("ggplot2")}
if(!require(tidyverse)){install.packages("tidyverse")}
df <- as_tibble(cbind(c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J"), c(120.6, 116.4, 117.2, 118.1, 114.1, 116.9, 113.3, 121.1, 116.9, 117.0)))
names(df) <- c("Individual", "Angle")
df$Angle <- as.numeric(df$Angle)
(mean_guess <- mean(df$Angle))
Input = ("
Instructor     Student     Sodium
'Brendon Small'     a     1200
'Brendon Small'     b     1400
'Brendon Small'     c     1350
'Brendon Small'     d     950
'Brendon Small'     e     1400
'Brendon Small'     f     1150
'Brendon Small'     g     1300
'Brendon Small'     h     1325
'Brendon Small'     i     1425
'Brendon Small'     j     1500
'Brendon Small'     k     1250
'Brendon Small'     l     1150
'Brendon Small'     m     950
'Brendon Small'     n     1150
'Brendon Small'     o     1600
'Brendon Small'     p     1300
'Brendon Small'     q     1050
'Brendon Small'     r     1300
'Brendon Small'     s     1700
'Brendon Small'     t     1300
")
sodium = as_tibble(read.table(textConnection(Input), header=TRUE))
rm(Input)
wpm_Input = ("
Instructor     Student     words_per_minute
'Dr. Katz Professional Therapist'     a     35
'Dr. Katz Professional Therapist'     b     50
'Dr. Katz Professional Therapist'     c     55
'Dr. Katz Professional Therapist'     d     60
'Dr. Katz Professional Therapist'     e     65
'Dr. Katz Professional Therapist'     f     60
'Dr. Katz Professional Therapist'     g     70
'Dr. Katz Professional Therapist'     h     55
'Dr. Katz Professional Therapist'     i     45
'Dr. Katz Professional Therapist'     j     55
'Dr. Katz Professional Therapist'     k     60
'Dr. Katz Professional Therapist'     l     45
'Dr. Katz Professional Therapist'     m     65
'Dr. Katz Professional Therapist'     n     55
'Dr. Katz Professional Therapist'     o     50
'Dr. Katz Professional Therapist'     p     60
")
wpm = as_tibble(read.table(textConnection(wpm_Input),header=TRUE))
rm(wpm_Input)
muknee <- 120
muNa <- 1500
muwpm <- 40
xNa <- sodium$Sodium
xwpm <- wpm$words_per_minute
df
xNa <- sodium$Sodium
library(psych)
headTail(xNa)
str(xNa)
summary(xNa)
library(rcompanion)
plotNormalHistogram(xNa)
qqnorm(xNa)
qqline(xNa, col = "red")
muNa <- 1500 # theoretical mean
t.test(xNa,
mu = muNa,
conf.int = 0.95)
xwpm <- wpm$words_per_minute
library(psych)
headTail(xwpm)
str(xwpm)
summary(xwpm)
xwpm <- wpm$words_per_minute
library(rcompanion)
plotNormalHistogram(xwpm)
qqnorm(xwpm)
qqline(xwpm, col = "green")
muwpm <- 40
t.test(xwpm,
mu = muwpm,
conf.int = 0.95)
library(lsr)
cohensD(sodium$Sodium, 1500)
sd(sodium$Sodium)
cohensD(wpm$words_per_minute, muwpm)
cohensD(sodium$Sodium, muNa)
library(ggplot2)
ggplot(data=sodium,
aes(x = Instructor, y = Sodium)) +
geom_boxplot() +
geom_point(aes(x = 1, y = 1500),
colour="blue",
size = 8,
shape = "+") +
theme_bw() +
theme(axis.title = element_text(face = "bold")) +
theme(axis.text = element_text(face = "bold"))
library(ggplot2)
ggplot(data=wpm,
aes(x = Instructor, y = words_per_minute)) +
geom_boxplot() +
geom_point(aes(x = 1, y = 40),
colour="blue",
size = 8,
shape = "+") +
theme_minimal() +
theme(axis.title = element_text(face = "bold")) +
theme(axis.text = element_text(face = "bold")) +
labs(y = "Words per Minute")
